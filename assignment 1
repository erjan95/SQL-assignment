SQL Assignment #1

#1

CREATE TABLE employers (
    Employer_ID INTEGER PRIMARY KEY,
    Full_Name TEXT,
    Joining_Date Date,
    Current_Position TEXT,
    Department TEXT,
    Assigned_Project TEXT
);

INSERT INTO employers (Department) VALUES ('IT Support');

SELECT * FROM employers;



#2

CREATE TABLE Services (
    Software_ID INTEGER PRIMARY KEY,
    Name TEXT,
    Category TEXT,
    Size INTEGER,
    Number_of_installments INTEGER
);

INSERT INTO Services (Category) VALUES ('A');

SELECT * FROM Services;


#3

CREATE TABLE Software_Requests (
    Employer_ID INTEGER PRIMARY KEY,
    Software_ID INTEGER,
    Request_Start_Date Date,
    Request_Close_Date Date,
    Status TEXT
);

SELECT * FROM Software_Requests;


#4

How can you make database consistent for ensuring when new request was inserted,
number of installments property of Software table should be increased value by one?

For a database to be consistent, data written to the database must be valid according to all defined rules, including constraints, transactions, triggers, or any other remaining combinations.

#5

Imagine a situation, new software was requested and related property of Software table
has been increased. But after a while, due to technical requirements, IT Teams were not
able to finish requests and made it invalid requests. How can you automate to update the
number of installments accordingly which means it will reduce value by the amount those
invalid closed requests?

First, use the JOIN function to separate between finished and incomplete requests using common attribute then GROUP BY to group those incomplete requests. We can automate data with triggers  
to update the number of installements.
